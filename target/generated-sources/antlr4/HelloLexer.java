// Generated from Hello.g4 by ANTLR 4.4
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class HelloLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__18=1, T__17=2, T__16=3, T__15=4, T__14=5, T__13=6, T__12=7, T__11=8, 
		T__10=9, T__9=10, T__8=11, T__7=12, T__6=13, T__5=14, T__4=15, T__3=16, 
		T__2=17, T__1=18, T__0=19, WS=20, BOOLEAN=21, INTEGER=22, IDENT=23, COMMENT=24, 
		ADD=25, MULT=26, SUBT=27, DIV=28, OR=29, AND=30, LTEQ=31, NE=32, EQ=33, 
		LT=34, GT=35, MOD=36, GTEQ=37, NOT=38, ASSIGNMENT=39, LPARE=40, RPARE=41;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'"
	};
	public static final String[] ruleNames = {
		"T__18", "T__17", "T__16", "T__15", "T__14", "T__13", "T__12", "T__11", 
		"T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", 
		"T__1", "T__0", "WS", "BOOLEAN", "INTEGER", "IDENT", "COMMENT", "ADD", 
		"MULT", "SUBT", "DIV", "OR", "AND", "LTEQ", "NE", "EQ", "LT", "GT", "MOD", 
		"GTEQ", "NOT", "ASSIGNMENT", "LPARE", "RPARE"
	};


	public HelloLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Hello.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2+\u0107\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\3\2\3\2"+
		"\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3"+
		"\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\b\3\b"+
		"\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3"+
		"\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16"+
		"\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21"+
		"\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23"+
		"\3\23\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26"+
		"\3\26\3\26\5\26\u00c7\n\26\3\27\6\27\u00ca\n\27\r\27\16\27\u00cb\3\30"+
		"\3\30\7\30\u00d0\n\30\f\30\16\30\u00d3\13\30\3\31\3\31\3\31\3\31\7\31"+
		"\u00d9\n\31\f\31\16\31\u00dc\13\31\3\31\3\31\3\31\3\31\3\32\3\32\3\33"+
		"\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3 \3!\3!\3!\3\"\3"+
		"\"\3#\3#\3$\3$\3%\3%\3&\3&\3&\3\'\3\'\3(\3(\3(\3)\3)\3*\3*\2\2+\3\3\5"+
		"\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21"+
		"!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!"+
		"A\"C#E$G%I&K\'M(O)Q*S+\3\2\6\5\2\13\f\17\17\"\"\4\2C\\c|\5\2\62;C\\c|"+
		"\4\2\f\f\17\17\u010a\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2"+
		"\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3"+
		"\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2"+
		"\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2"+
		"\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2"+
		"\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2"+
		"\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q"+
		"\3\2\2\2\2S\3\2\2\2\3U\3\2\2\2\5Y\3\2\2\2\7_\3\2\2\2\tf\3\2\2\2\13p\3"+
		"\2\2\2\rv\3\2\2\2\17x\3\2\2\2\21z\3\2\2\2\23\u0082\3\2\2\2\25\u0084\3"+
		"\2\2\2\27\u0087\3\2\2\2\31\u008c\3\2\2\2\33\u0092\3\2\2\2\35\u009a\3\2"+
		"\2\2\37\u009f\3\2\2\2!\u00a5\3\2\2\2#\u00ae\3\2\2\2%\u00b2\3\2\2\2\'\u00b7"+
		"\3\2\2\2)\u00b9\3\2\2\2+\u00c6\3\2\2\2-\u00c9\3\2\2\2/\u00cd\3\2\2\2\61"+
		"\u00d4\3\2\2\2\63\u00e1\3\2\2\2\65\u00e3\3\2\2\2\67\u00e5\3\2\2\29\u00e7"+
		"\3\2\2\2;\u00e9\3\2\2\2=\u00eb\3\2\2\2?\u00ed\3\2\2\2A\u00f0\3\2\2\2C"+
		"\u00f3\3\2\2\2E\u00f5\3\2\2\2G\u00f7\3\2\2\2I\u00f9\3\2\2\2K\u00fb\3\2"+
		"\2\2M\u00fe\3\2\2\2O\u0100\3\2\2\2Q\u0103\3\2\2\2S\u0105\3\2\2\2UV\7x"+
		"\2\2VW\7c\2\2WX\7t\2\2X\4\3\2\2\2YZ\7e\2\2Z[\7q\2\2[\\\7p\2\2\\]\7u\2"+
		"\2]^\7v\2\2^\6\3\2\2\2_`\7t\2\2`a\7g\2\2ab\7v\2\2bc\7w\2\2cd\7t\2\2de"+
		"\7p\2\2e\b\3\2\2\2fg\7g\2\2gh\7p\2\2hi\7f\2\2ij\7\"\2\2jk\7y\2\2kl\7j"+
		"\2\2lm\7k\2\2mn\7n\2\2no\7g\2\2o\n\3\2\2\2pq\7y\2\2qr\7j\2\2rs\7k\2\2"+
		"st\7n\2\2tu\7g\2\2u\f\3\2\2\2vw\7}\2\2w\16\3\2\2\2xy\7=\2\2y\20\3\2\2"+
		"\2z{\7K\2\2{|\7p\2\2|}\7v\2\2}~\7g\2\2~\177\7i\2\2\177\u0080\7g\2\2\u0080"+
		"\u0081\7t\2\2\u0081\22\3\2\2\2\u0082\u0083\7\177\2\2\u0083\24\3\2\2\2"+
		"\u0084\u0085\7k\2\2\u0085\u0086\7h\2\2\u0086\26\3\2\2\2\u0087\u0088\7"+
		"y\2\2\u0088\u0089\7j\2\2\u0089\u008a\7g\2\2\u008a\u008b\7p\2\2\u008b\30"+
		"\3\2\2\2\u008c\u008d\7d\2\2\u008d\u008e\7t\2\2\u008e\u008f\7g\2\2\u008f"+
		"\u0090\7c\2\2\u0090\u0091\7m\2\2\u0091\32\3\2\2\2\u0092\u0093\7r\2\2\u0093"+
		"\u0094\7t\2\2\u0094\u0095\7q\2\2\u0095\u0096\7i\2\2\u0096\u0097\7t\2\2"+
		"\u0097\u0098\7c\2\2\u0098\u0099\7o\2\2\u0099\34\3\2\2\2\u009a\u009b\7"+
		"g\2\2\u009b\u009c\7n\2\2\u009c\u009d\7u\2\2\u009d\u009e\7g\2\2\u009e\36"+
		"\3\2\2\2\u009f\u00a0\7d\2\2\u00a0\u00a1\7g\2\2\u00a1\u00a2\7i\2\2\u00a2"+
		"\u00a3\7k\2\2\u00a3\u00a4\7p\2\2\u00a4 \3\2\2\2\u00a5\u00a6\7h\2\2\u00a6"+
		"\u00a7\7w\2\2\u00a7\u00a8\7p\2\2\u00a8\u00a9\7e\2\2\u00a9\u00aa\7v\2\2"+
		"\u00aa\u00ab\7k\2\2\u00ab\u00ac\7q\2\2\u00ac\u00ad\7p\2\2\u00ad\"\3\2"+
		"\2\2\u00ae\u00af\7g\2\2\u00af\u00b0\7p\2\2\u00b0\u00b1\7f\2\2\u00b1$\3"+
		"\2\2\2\u00b2\u00b3\7v\2\2\u00b3\u00b4\7j\2\2\u00b4\u00b5\7g\2\2\u00b5"+
		"\u00b6\7p\2\2\u00b6&\3\2\2\2\u00b7\u00b8\7.\2\2\u00b8(\3\2\2\2\u00b9\u00ba"+
		"\t\2\2\2\u00ba\u00bb\3\2\2\2\u00bb\u00bc\b\25\2\2\u00bc*\3\2\2\2\u00bd"+
		"\u00be\7V\2\2\u00be\u00bf\7T\2\2\u00bf\u00c0\7W\2\2\u00c0\u00c7\7G\2\2"+
		"\u00c1\u00c2\7H\2\2\u00c2\u00c3\7N\2\2\u00c3\u00c4\7C\2\2\u00c4\u00c5"+
		"\7U\2\2\u00c5\u00c7\7G\2\2\u00c6\u00bd\3\2\2\2\u00c6\u00c1\3\2\2\2\u00c7"+
		",\3\2\2\2\u00c8\u00ca\4\62;\2\u00c9\u00c8\3\2\2\2\u00ca\u00cb\3\2\2\2"+
		"\u00cb\u00c9\3\2\2\2\u00cb\u00cc\3\2\2\2\u00cc.\3\2\2\2\u00cd\u00d1\t"+
		"\3\2\2\u00ce\u00d0\t\4\2\2\u00cf\u00ce\3\2\2\2\u00d0\u00d3\3\2\2\2\u00d1"+
		"\u00cf\3\2\2\2\u00d1\u00d2\3\2\2\2\u00d2\60\3\2\2\2\u00d3\u00d1\3\2\2"+
		"\2\u00d4\u00d5\7\61\2\2\u00d5\u00d6\7\61\2\2\u00d6\u00da\3\2\2\2\u00d7"+
		"\u00d9\13\2\2\2\u00d8\u00d7\3\2\2\2\u00d9\u00dc\3\2\2\2\u00da\u00d8\3"+
		"\2\2\2\u00da\u00db\3\2\2\2\u00db\u00dd\3\2\2\2\u00dc\u00da\3\2\2\2\u00dd"+
		"\u00de\t\5\2\2\u00de\u00df\3\2\2\2\u00df\u00e0\b\31\2\2\u00e0\62\3\2\2"+
		"\2\u00e1\u00e2\7-\2\2\u00e2\64\3\2\2\2\u00e3\u00e4\7,\2\2\u00e4\66\3\2"+
		"\2\2\u00e5\u00e6\7/\2\2\u00e68\3\2\2\2\u00e7\u00e8\7\61\2\2\u00e8:\3\2"+
		"\2\2\u00e9\u00ea\7~\2\2\u00ea<\3\2\2\2\u00eb\u00ec\7(\2\2\u00ec>\3\2\2"+
		"\2\u00ed\u00ee\7>\2\2\u00ee\u00ef\7?\2\2\u00ef@\3\2\2\2\u00f0\u00f1\7"+
		"#\2\2\u00f1\u00f2\7?\2\2\u00f2B\3\2\2\2\u00f3\u00f4\7?\2\2\u00f4D\3\2"+
		"\2\2\u00f5\u00f6\7>\2\2\u00f6F\3\2\2\2\u00f7\u00f8\7@\2\2\u00f8H\3\2\2"+
		"\2\u00f9\u00fa\7\'\2\2\u00faJ\3\2\2\2\u00fb\u00fc\7@\2\2\u00fc\u00fd\7"+
		"?\2\2\u00fdL\3\2\2\2\u00fe\u00ff\7#\2\2\u00ffN\3\2\2\2\u0100\u0101\7<"+
		"\2\2\u0101\u0102\7?\2\2\u0102P\3\2\2\2\u0103\u0104\7*\2\2\u0104R\3\2\2"+
		"\2\u0105\u0106\7+\2\2\u0106T\3\2\2\2\b\2\u00c6\u00cb\u00cf\u00d1\u00da"+
		"\3\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}